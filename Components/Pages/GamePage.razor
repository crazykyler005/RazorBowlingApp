@page "/game/{GameId:int}"
@using BowlingApp.Entity
@using BowlingApp.Services
@inject IGameService GameService
@inject IScoreBoardService ScoreBoardService
@inject NavigationManager Navigation
@rendermode InteractiveServer

@if (AllScores.Any())
{
    @foreach (var (name, i) in Names.Select((name, i) => (name, i)))
    {
        <ScoreBoardPage Name="@name" Scores="@AllScores[i]" />
    }

	<button @onclick=SaveScores>Save Scores</button>
}
else
{
    <p>Loading...</p>
}

@code
{
	[Parameter]
	public int GameId { get; set; }
	private List<ScoreBoard> scoreBoards = new();
	// references to all scores in scoreboards
	private List<uint[]> AllScores = new();
	public string[] Names = null!;

	protected override async Task OnInitializedAsync()
	{
		Game game = await GameService.GetGame(GameId);

		scoreBoards = game.ScoreBoards.ToList();
		AllScores = scoreBoards.Select(sb => sb.Scores).ToList();
		Names = game.PlayerNames.Split(';').ToArray();
	}

	// Save scores to database
	async Task SaveScores()
	{
		await ScoreBoardService.UpdateScoreBoards(scoreBoards);
		Console.WriteLine("Updated scoreboards for player(s)");
		
		Navigation.NavigateTo("/game-list/1");
	}
}